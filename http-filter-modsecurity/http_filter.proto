syntax = "proto3";

package envoy.config.filter.http.modsecurity;

import "envoy/config/core/v3/http_uri.proto";
import "validate/validate.proto";

message ModsecurityFilterConfigDecoder {
    // If set, rules are loaded from this path
    string rules_path = 1;
    
    // If set, rules are loaded from this inline configuration.
    // Note, if both rules_path and rules_inline are set, rules_path is first loaded and afterwards rules_inline is loaded
    string rules_inline = 2;

    // If set, a webhook will be called when a rule is matched. (non-disruptive actions only since ModSecurity >= v3.0.3)
    ModsecurityWebhook webhook = 3;
}

message ModsecurityWebhook {
    // The http server URI to trigger the webhook.
    envoy.config.core.v3.HttpUri http_uri = 1 [(validate.rules).message.required = true];

    // If provided, an X-Envoy-Webhook-Signature-Value header will be added to the request with HMAC-SHA256 over the contents and `secret` as its key.
    string secret = 2;
}
